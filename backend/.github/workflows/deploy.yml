name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Create test environment file
      run: |
        cd backend
        cp env.example .env.test
        echo "DB_HOST=localhost" >> .env.test
        echo "DB_PORT=5432" >> .env.test
        echo "DB_NAME=test_db" >> .env.test
        echo "DB_USER=postgres" >> .env.test
        echo "DB_PASSWORD=postgres" >> .env.test
        echo "JWT_SECRET=test-secret-key" >> .env.test
        echo "NODE_ENV=test" >> .env.test
        echo "ENABLE_DB_SYNC=false" >> .env.test
    
    - name: Run tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: test_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        JWT_SECRET: test-secret-key
    
    - name: Run linting
      run: |
        cd backend
        npm run lint || echo "Linting failed but continuing..."
    
    - name: Security audit
      run: |
        cd backend
        npm audit --audit-level moderate || echo "Security audit found issues but continuing..."

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci --only=production
    
    - name: Build application
      run: |
        cd backend
        npm run build || echo "No build script found, skipping..."
    
    - name: Create deployment artifact
      run: |
        cd backend
        tar -czf ../backend-deploy.tar.gz .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-deploy
        path: backend-deploy.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-deploy
    
    - name: Deploy to Render
      uses: johnbeynon/render-deploy@v1.0.0
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        wait-for-success: true 