import { test, expect } from "playwright-test-coverage";

test.describe("Study Groups Page Shows Correctly", () => {
	test("Check if all needed things show", async ({ page }) => {
		await page.goto('http://localhost:5173/home');
		await expect(page.getByRole('button', { name: 'Study Groups' })).toBeVisible();
		await page.getByRole('button', { name: 'Study Groups' }).click();
		await expect(page.getByRole('button', { name: 'Discover groups' })).toBeVisible();
		await expect(page.getByRole('button', { name: 'My groups' })).toBeVisible();
		await expect(page.getByRole('button', { name: 'Create Group' })).toBeVisible();
		await expect(page.getByRole('heading', { name: 'Study Groups' })).toBeVisible();
		await page.getByRole('button', { name: 'Discover groups' }).click();
		await page.getByRole('button', { name: 'My groups' }).click();
		const locator = page.getByRole('heading', { name: 'No groups found' });
		await locator.waitFor({ state: 'hidden' });
		await expect(page.locator('.outline-btn').first()).toBeVisible();
		await expect(page.locator('.red-btn').first()).toBeVisible();
		await page.locator('.outline-btn').first().click();
		await expect(page.getByRole('button').filter({ hasText: /^$/ }).nth(3)).toBeVisible();
		await expect(page.getByRole('button', { name: 'Sessions' })).toBeVisible();
		await expect(page.getByRole('button', { name: 'Create Session' })).toBeVisible();
		await expect(page.getByRole('button').filter({ hasText: /^$/ }).nth(4)).toBeVisible();
		await page.getByRole('textbox', { name: 'Type your message...' }).click();
		await page.getByRole('textbox', { name: 'Type your message...' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Type your message...' }).fill('H');
		await page.getByRole('textbox', { name: 'Type your message...' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Type your message...' }).fill('Hello ');
		await page.getByRole('textbox', { name: 'Type your message...' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Type your message...' }).fill('Hello G');
		await page.getByRole('textbox', { name: 'Type your message...' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Type your message...' }).fill('Hello Guys.');
		await page.getByRole('button').filter({ hasText: /^$/ }).nth(4).click();
		await expect(page.getByText('Hello Guys.')).toBeVisible();
		await page.getByRole('button', { name: 'Create Session' }).click();
		await page.getByRole('textbox', { name: 'Title' }).click();
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('P');
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('');
		await expect(page.getByRole('textbox', { name: 'Title' })).toBeVisible();
		await expect(page.getByRole('textbox', { name: 'Subject' })).toBeVisible();
		await expect(page.getByRole('heading', { name: 'Create New Session' })).toBeVisible();
		await expect(page.getByRole('textbox', { name: 'Description' })).toBeVisible();
		await expect(page.getByText('Description')).toBeVisible();
		await expect(page.getByText('Location')).toBeVisible();
		await expect(page.getByText('Start Date')).toBeVisible();
		await expect(page.getByText('Start Time')).toBeVisible();
		await expect(page.getByText('End Date')).toBeVisible();
		await expect(page.getByText('End Time')).toBeVisible();
		await expect(page.getByRole('button', { name: 'Cancel' })).toBeVisible();
		await expect(page.getByRole('button', { name: 'Create', exact: true })).toBeVisible();
		await page.getByRole('textbox', { name: 'Title' }).click();
		await page.getByRole('textbox', { name: 'Title' }).click();
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('P');
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('Php ');
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('Php S');
		await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Title' }).fill('Php Session');
		await page.getByRole('textbox', { name: 'Subject' }).click();
		await page.getByRole('textbox', { name: 'Subject' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Subject' }).fill('MC');
		await page.getByRole('textbox', { name: 'Subject' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).click();
		await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).fill('W');
		await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).fill('We ');
		await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).fill('We G');
		await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).fill('We Gonnna try ');
		await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Description' }).fill('We Gonnna try PHP.');
		await page.getByRole('textbox', { name: 'Location' }).click();
		await page.getByRole('textbox', { name: 'Location' }).fill('MSL-009');
		await page.getByRole('textbox', { name: 'Location' }).press('CapsLock');
		await page.getByRole('textbox', { name: 'Start Date' }).fill('2025-09-30');
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'End Date' }).fill('2025-10-31');
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('button', { name: 'Create', exact: true }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).click();
		await page.getByRole('textbox', { name: 'Start Time' }).fill('18:30');
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('textbox', { name: 'End Time' }).click();
		await page.getByRole('textbox', { name: 'End Time' }).fill('00:30');
		page.once('dialog', dialog => {
			console.log(`Dialog message: ${dialog.message()}`);
			dialog.dismiss().catch(() => {});
		});
		await page.getByRole('button', { name: 'Create', exact: true }).click();
		await page.getByRole('button', { name: 'Cancel' }).click();
		await page.getByRole('button', { name: 'Sessions' }).click();
		await expect(page.getByRole('heading', { name: 'Upcoming Sessions' })).toBeVisible();
		await expect(page.locator('div').filter({ hasText: /^Calculus Study Group2025-09-30View$/ }).getByRole('button')).toBeVisible();
		await expect(page.getByRole('button', { name: 'Close' })).toBeVisible();
		await page.locator('div').filter({ hasText: /^Calculus Study Group2025-09-30View$/ }).getByRole('button').click();
		await expect(page.getByText('Description:')).toBeVisible();
		await expect(page.getByText('Location:')).toBeVisible();
		await expect(page.getByText('Category:')).toBeVisible();
		await expect(page.getByText('Date:')).toBeVisible();
		await expect(page.getByText('Start Time:')).toBeVisible();
		await expect(page.getByText('End Time:')).toBeVisible();
		await expect(page.getByText('Organizer:')).toBeVisible();
		await expect(page.getByText('Capacity:')).toBeVisible();
		await expect(page.getByText('Theme:')).toBeVisible();
		await expect(page.getByRole('button', { name: 'Cancel' })).toBeVisible();
		await expect(page.getByRole('button', { name: 'Join' })).toBeVisible();
		page.once('dialog', dialog => {
			console.log(`Dialog message: ${dialog.message()}`);
			dialog.dismiss().catch(() => {});
		});
		await page.getByRole('button', { name: 'Join' }).click();
		await page.getByRole('button', { name: 'Cancel' }).click();
		await page.getByRole('button', { name: 'Close' }).click();
		await page.getByRole('button').filter({ hasText: /^$/ }).nth(3).click();
		page.once('dialog', dialog => {
			console.log(`Dialog message: ${dialog.message()}`);
			dialog.dismiss().catch(() => {});
		});
		await page.locator('div:nth-child(3) > .card-actions > .red-btn').click();


			});
});
